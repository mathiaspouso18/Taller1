Boolean.h

	#ifndef BOOLEAN_H_INCLUDED
	#define BOOLEAN_H_INCLUDED

	typedef enum{FALSE, TRUE} Boolean;

	#endif // BOOLEAN_H_INCLUDED


String.h
	
	#ifndef STRING_H_INCLUDED
	#define STRING_H_INCLUDED

	#include "Boolean.h"

	const int MAX = 80;
	typedef char * String;


	void Parsear(String s,ListaTerm &lista);
	Termino ConvertirStringATermino (String s);
	int ConvertirCharANumero(String s);
	Boolean ValidarNombre(String s);
	Boolean ValidarNumero(String s);
	Boolean ValidarNombreArchivo (String s);


	#endif // STRING_H_INCLUDED
	

ListaParametros.h
	
	#ifndef LISTAPARAMETROS_H_INCLUDED
	#define LISTAPARAMETROS_H_INCLUDED

	#include "String.h"

	typedef struct nodo_string{String info;
				   nodo_string * sig;} Nodo;
	typedef Nodo * ListaParam;


	int CantParametros(ListaParam l);


	#endif // LISTAPARAMETROS_H_INCLUDED

	
Termino.h

	#ifndef TERMINO_H_INCLUDED
	#define TERMINO_H_INCLUDED

	typedef struct { char signo;
			 int base;
			 int exponente;} Termino;
	

	char DarSigno(Termino term);
	int DarExponente(Termino term);
	int DarBase(Termino term);



	#endif // TERMINO_H_INCLUDED


	
	
ListaTerminos.h

	#ifndef LISTATERMINOS_H_INCLUDED
	#define LISTATERMINOS_H_INCLUDED
	
	#include "Termino.h"
	
	typedef struct nodo_termino{ Termino info;
				     nodo_termino * sig;} Nodo;
	typedef Nodo * ListaTerm;

	
	int CantTerminos(ListaTerm lista);
	void InsTermBack(ListaTerm &lista, Termino term);
	
	#endif // LISTATERMINOS_H_INCLUDED

	
	
	
Polinomio.h

	#ifndef POLINOMIO_H_INCLUDED
	#define POLINOMIO_H_INCLUDED
	
	#include "String.h"
	#include "ListaTerminos.h"
	
	typedef struct nodo_int{ String nombre;
				 ListaTerm Listaterminos} Polinomio;
	

	void DarNombrePloli(Polinomio p);
	void DarListaTermPoli(Polinomio p, ListaTerm &lista);
	void Crear(Polinomio &p, ListaParam lista);
	void SumarPoli(Polinomio a, Polinomio b ,Polinomio &resu);
	void MultiplicarPoli(Polinomio a, Polinomio b ,Polinomio &resu);
	int EvaluarPoli(Polinomio p, int x);
	Boolean EsRaizPoli(Polinomio p, int x);
	void GuardarPolinomio(Polinomio p, String archivo);
	void RecuperarPolinomio(Polinomio &p, String poli, String archivo);
	
	#endif // POLINOMIO_H_INCLUDED
	
	
ABBPolinomio.h

	#ifndef ABBPOLINOMIO_H_INCLUDED
	#define ABBPOLINOMIO_H_INCLUDED

	#include "Polinomio.h"

	typedef struct nodoN { Polinomio info;
                               nodoN *hizq;
                               nodoN *hder;} nodo;

	typedef nodo *Arbol;

	#endif // ABBPOLINOMIO_H_INCLUDED

	void InicializarArbol(Arbol &ABB);
	void MostrarABBPoli(Arbol ABBPoli);
	void InsPoliABBPoli(Arbol &ABBPoli, Polinomio p);
	Boolean ExistePolinomio(Arbol &ABBPoli, String nombre_poli);
	void DarPolinomio (Arbol &ABBPoli, String nombre_poli);

		
EnumComandos.h

	typedef enum{CREAR, SUMAR, MULTIPLICAR, EVALUAR, ES_RAIZ, MOSTRAR, GUARDAR, RECUPERAR, SALIR} EnumComandos;